{
  "__type__": "cc.TextAsset",
  "_name": "rules",
  "_objFlags": 0,
  "_native": "",
  "text": "# rules.txt\n# Copyright 2011, Stefan Beller <stefanbeller@googlemail.com>\n#\n# This file is part of the sewers example for automapping for Tiled.\n#\n# This program is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by the Free\n# Software Foundation; either version 2 of the License, or (at your option)\n# any later version.\n#\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n# more details.\n#\n# You should have received a copy of the GNU General Public License along with\n# this program. If not, see <http://www.gnu.org/licenses/>.\n\n\n# lines starting with # or // are comments\n# all other lines will be parsed and treated as filenames.\n\n# Feel free to comment out certain rules, to see if and how they are working.\n# So have fun experimenting with this bunch of rules :)\n\n# First apply only one tile rules to fill the regions\n#\n# We mark the place, where rules are defined, with the RuleRegion layer.\n# So whereever there are tiles at the ruleRegion layer, it will be used as a rule.\n# In the RuleSet layer we can define, which combination of tiles must occur\n# to trigger the specific rule.\n# The layers Rule_Ground, Rule_Over and Rule_Over2 define the output of the rules.\n#\n# Which tiles should I use in the regions layer?\n# Actually there can be any tiles, but it should be the same tiles for one rule.\n# So use whatever you want, maybe a colorful tile so you can see easily that these\n# tiles are used for defining the rule region.\n#\n# In the very first rulefile used for Automapping it might be useful to define\n# some map properties:\n# \"DeleteTiles\" = \"true\", \"false\" - This property determines if all tiles in the\n#                                   whole region where Automapping takes place\n#                                   are deleted.\n#                                   That is useful, when not all layers are covered\n#                                   at all places. (Check the Over and Over2 layer!)\n# \"AutoMappingRadius\" = 0,1,2...  - This property determines which regions are\n#                                   automatically remapped at live Automapping.\n#                                   When you draw directly into the map,\n#                                   not the whole map is remapped, but only a little\n#                                   place around. Here you can specify how many\n#                                   tiles at least should be remapped.\n\n./rule_001.tmx\n\n\n\n\n# Setup the right transition tiles at the border of light blue stone tiles\n#\n# Basically it is the same as the first rule, we are just using bigger rules.\n# Whenever there is a light blue tile beside a grey tile, one of these rules\n# will apply.\n\n./rule_002.tmx\n\n\n\n\n# Now put straight walls\n#\n# Note: Compare the regions and the set layer!\n# Not at all places where a rule is defined, there is a tile in the input_set layer.\n# This means that there can be any tiles except those used by the rule.\n# So there are no black tiles allowed, when there are no tiles in the input_set\n# layer.\n\n./rule_003.tmx\n\n\n\n\n# Now we add inner corners for walls\n#\n# (No new features introduced)\n\n./rule_004.tmx\n\n\n\n\n# Now we add the corners for walls\n#\n# (No new features introduced)\n\n./rule_005.tmx\n\n\n\n\n# Correct the error we got in the two previous rulefiles (overwrite it once more)\n#\n# Here we can see the use of input_set and input_NotSet\n# With the input_NotSet we can define which tiles must not be used at certain places\n# Important sideeffect: the empty regions in ruleSet can be anything now, including\n# black tiles as used here!\n#\n# So when you use both input_Set and input_NotSet, you need to specify exactly what\n# is allowed at which places.\n\n./rule_006.tmx\n\n\n\n\n# Setup the corner stones for light blue stone tiles\n#\n# Hey, there are multiple layers called input_NotSet!\n# Yes, when you need to specify multiple allowed or disallowed tiles per\n# position, you can use multiple layers of input_Set and input_NotSet\n\n./rule_007.tmx\n\n\n\n\n\n# Setup objects now\n# The objects '1' will be placed. They will be placed based on the\n# Over layer, which was created by previous rules.\n# The placement of objects is done in south-east corners.\n\n./rule_008.tmx\n\n\n\n\n# Setup another object.\n# This object is based on input from the Ground layer.\n# It will put objects to borderstones which are near an end of that borderline.\n#\n\n./rule_009.tmx\n"
}