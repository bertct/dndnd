{"version":3,"sources":["assets\\scripts\\Board.js"],"names":["cc","Class","Component","properties","board","type","TiledMap","users","Node","enemies","start","positionFirstCellX","node","x","getTileSize","width","getMapSize","positionFirstCellY","y","height","gotToPosition","moveUp","character","moveDown","moveLeft","moveRight","xPositionNumber","yPositionNumber"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE;AACH,iBAAS,IADN;AAEHC,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFN,KAhBC;AAoBRC,IAAAA,KAAK,EAAE;AACH,iBAAS,EADN;AAEHF,MAAAA,IAAI,EAAE,CAACL,EAAE,CAACQ,IAAJ;AAFH,KApBC;AAwBRC,IAAAA,OAAO,EAAE;AACL,iBAAS,EADJ;AAELJ,MAAAA,IAAI,EAAE,CAACL,EAAE,CAACQ,IAAJ;AAFD;AAxBD,GAHP;AAiCL;AAEA;AAEAE,EAAAA,KArCK,mBAqCI;AACL,SAAKC,kBAAL,GAA0B,KAAKP,KAAL,CAAWQ,IAAX,CAAgBC,CAAhB,GAAqB,KAAKT,KAAL,CAAWU,WAAX,GAAyBC,KAAzB,GAAiC,KAAKX,KAAL,CAAWY,UAAX,GAAwBD,KAAzD,GAA+D,CAApF,GAAyF,KAAKX,KAAL,CAAWU,WAAX,GAAyBC,KAAzB,GAA+B,CAAlJ;AACA,SAAKE,kBAAL,GAA0B,KAAKb,KAAL,CAAWQ,IAAX,CAAgBM,CAAhB,GAAqB,KAAKd,KAAL,CAAWU,WAAX,GAAyBK,MAAzB,GAAkC,KAAKf,KAAL,CAAWY,UAAX,GAAwBG,MAA1D,GAAiE,CAAtF,GAA2F,KAAKf,KAAL,CAAWU,WAAX,GAAyBK,MAAzB,GAAgC,CAArJ;AAEA,SAAKC,aAAL,CAAmB,KAAKb,KAAL,CAAW,CAAX,CAAnB,EAAkC,CAAlC,EAAqC,CAArC;AACH,GA1CI;AA4CLc,EAAAA,MA5CK,kBA4CEC,SA5CF,EA4Ca;AACdA,IAAAA,SAAS,CAACJ,CAAV,GAAcI,SAAS,CAACJ,CAAV,GAAc,KAAKd,KAAL,CAAWU,WAAX,GAAyBK,MAArD;AACH,GA9CI;AAgDLI,EAAAA,QAhDK,oBAgDID,SAhDJ,EAgDe;AAChBA,IAAAA,SAAS,CAACJ,CAAV,GAAcI,SAAS,CAACJ,CAAV,GAAc,KAAKd,KAAL,CAAWU,WAAX,GAAyBK,MAArD;AACH,GAlDI;AAoDLK,EAAAA,QApDK,oBAoDIF,SApDJ,EAoDe;AAChBA,IAAAA,SAAS,CAACT,CAAV,GAAcS,SAAS,CAACT,CAAV,GAAc,KAAKT,KAAL,CAAWU,WAAX,GAAyBC,KAArD;AACH,GAtDI;AAwDLU,EAAAA,SAxDK,qBAwDKH,SAxDL,EAwDgB;AACjBA,IAAAA,SAAS,CAACT,CAAV,GAAcS,SAAS,CAACT,CAAV,GAAc,KAAKT,KAAL,CAAWU,WAAX,GAAyBC,KAArD;AACH,GA1DI;AA4DLK,EAAAA,aA5DK,yBA4DSE,SA5DT,EA4DoBI,eA5DpB,EA4DqCC,eA5DrC,EA4DsD;AACvDL,IAAAA,SAAS,CAACT,CAAV,GAAc,KAAKF,kBAAL,GAA0B,KAAKP,KAAL,CAAWU,WAAX,GAAyBC,KAAzB,GAAiCW,eAAzE;AACAJ,IAAAA,SAAS,CAACJ,CAAV,GAAc,KAAKD,kBAAL,GAA0B,KAAKb,KAAL,CAAWU,WAAX,GAAyBK,MAAzB,GAAkCQ,eAA1E;AACH,GA/DI,CAiEL;;AAjEK,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        board: {\r\n            default: null,\r\n            type: cc.TiledMap\r\n        },\r\n        users: {\r\n            default: [],\r\n            type: [cc.Node]\r\n        },\r\n        enemies: {\r\n            default: [],\r\n            type: [cc.Node]\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        this.positionFirstCellX = this.board.node.x - (this.board.getTileSize().width * this.board.getMapSize().width/2) + this.board.getTileSize().width/2;\r\n        this.positionFirstCellY = this.board.node.y + (this.board.getTileSize().height * this.board.getMapSize().height/2) - this.board.getTileSize().height/2;\r\n        \r\n        this.gotToPosition(this.users[0], 3, 4);\r\n    },\r\n\r\n    moveUp(character) {\r\n        character.y = character.y + this.board.getTileSize().height;\r\n    },\r\n\r\n    moveDown(character) {\r\n        character.y = character.y - this.board.getTileSize().height;\r\n    },\r\n\r\n    moveLeft(character) {\r\n        character.x = character.x - this.board.getTileSize().width;\r\n    },\r\n\r\n    moveRight(character) {\r\n        character.x = character.x + this.board.getTileSize().width;\r\n    },\r\n\r\n    gotToPosition(character, xPositionNumber, yPositionNumber) {\r\n        character.x = this.positionFirstCellX + this.board.getTileSize().width * xPositionNumber;\r\n        character.y = this.positionFirstCellY - this.board.getTileSize().height * yPositionNumber;\r\n    }\r\n\r\n    // update (dt) {},\r\n});\r\n"]}